... i do not want to see these errors in the terminal:

Error in Publish Manuscript: Error: Project metadata not found. Please click "Project Settings" to set up your project metadata (title, author, etc.) before publishing.
    at PublishManuscript.readProjectMetadata (/Users/cleesmith/storygrind/publish-manuscript.js:122:13)
    at PublishManuscript.execute (/Users/cleesmith/storygrind/publish-manuscript.js:186:35)
    at Object.executeToolById (/Users/cleesmith/storygrind/tool-system.js:563:31)
    at /Users/cleesmith/storygrind/main.js:1117:43
    at /Users/cleesmith/storygrind/main.js:1139:9
    at WebContents.<anonymous> (node:electron/js2c/browser_init:2:89595)
    at WebContents.emit (node:events:513:28)
... from publish-manuscript.js:
    
    // Check if metadata directory exists
    if (!fs.existsSync(metadataDir)) {
      throw new Error(`Project metadata not found. Please click "Project Settings" to set up your project metadata (title, author, etc.) before publishing.`);
    }

... the code should be similar to:
      try {
        this.emitOutput(`Reading manuscript file: ${manuscriptFile}\n`);
        manuscriptContent = await this.readInputFile(this.ensureAbsolutePath(manuscriptFile, saveDir));
      } catch (error) {
        this.emitOutput(`Error: Required manuscript file not found: ${manuscriptFile}\n`);
        this.emitOutput("Creating a new manuscript file.\n");




chapter-writer.js
... used to have:
    {
      "name": "title",
      "label": "TITLE",
      "type": "text",
      "description": "Title of story",
      "required": true,
      "default": "",
      "group": "Content Configuration"
    },
    {
      "name": "pov",
      "label": "POV",
      "type": "text",
      "description": "Point of view",
      "required": true,
      "default": "third person perspective",
      "group": "Content Configuration"
    },
... now these should be retrieved from metadata for the Project




for each Project folder:
... instead of having to repeatedly type: title, author, pov, buy URL
... let's have a Project Settings dialog, similar to Settings but not 
	store in state.js, but stored as .txt files, which
	a user can edit outside of StoryGrind and any Tool needing these 
	can read them as well

                      for example:
~/storygrind_projects/The Accounting/metadata
	_copyright.txt = textarea for multiple lines
	_dedication.txt = textarea for multiple lines
	_about_author.txt = textarea for multiple lines
	_publisher.txt = text one line
	_title.txt = textarea for multiple lines
	_author.txt = text one line
	_pov.txt = text one line
	_buy_url.txt = text one long line

... so even though this is not really a Tool, we can 
put it under: "Run a non-AI tool:" but clicking:
"Setup & Run" should bring up a full window like in:
settings-dialog.html and settings-dialog.js

let's call it: project-settings.js and .html
and i will code:
tool-system.js


StoryGrind from Premise to Published on KDP

[StoryGrind]
1. Brainstorming - The Accounting

2. Outline - 3 acts 15 chapters

3. World - include character analysis

4. Chapters - one-chapter-at-time to create manuscript.txt

5. Editing - tools/prompts applied to manuscript.txt, most time consuming

6. KDP prep tool

7. Publish - website: .html, .epub to index.html; and .pdf for KDP
   and Book Funnel


[leave StoryGrind]
8. KDP - upload .pdf, cover, proof, final publish


[StoryGrind]
9. Publish - add link for BUY button on website and Book Funnel


Notes:
- everything, StoryGrind files/reports, will be available on: 
slipthetrap.com/storygrind_projects/TheAccounting
for video viewers to follow along or go off on their own, and 
only ask that they share what their creation

=== IMPORTANT ===
3 POV characters
Multiple cases that seem separate but connect
Way more moral ambiguity
The three cops spending more time hunting each other
A darker, more cynical ending

For your structure specifically:
The book shows how to have three protagonists who are all "right" from 
their own perspective, investigating the same crime while also 
investigating/suspecting each other. 
Each chapter you're deeper in one pov's head, seeing the others 
as potential enemies.

Use these techniques:

Short, punchy chapters that rotate POVs
Each character misreading the others' motives
Information revealed to one POV but not others
Everyone keeping secrets while hunting truth
=== END IMPORTANT ===


